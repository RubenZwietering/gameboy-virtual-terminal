include "hardware.inc"
include "input.inc"

export init_input_mem

export input_buffer_read_ptr
export input_buffer_write_ptr

export input_buffer
export input_buffer_end

export check_input

section "input variables", WRAMX
button_up_repeat_next_frame: 		ds 1
button_left_repeat_next_frame: 		ds 1
button_right_repeat_next_frame: 	ds 1
button_down_repeat_next_frame: 		ds 1

button_select_repeat_next_frame: 	ds 1
button_start_repeat_next_frame: 	ds 1
button_a_repeat_next_frame: 		ds 1
button_b_repeat_next_frame: 		ds 1

input_buffer_read_ptr:		ds 1
input_buffer_write_ptr:		ds 1

section "input buffer", wramx, align[8]
input_buffer: 				ds $100
input_buffer_end:

section "input functions", ROMX
; init_input_mem
;
; destroys `af`
init_input_mem:
	xor a
	ld [button_up_repeat_next_frame], a
	ld [button_left_repeat_next_frame], a
	ld [button_right_repeat_next_frame], a
	ld [button_down_repeat_next_frame], a
	
	ld [button_select_repeat_next_frame], a
	ld [button_start_repeat_next_frame], a
	ld [button_a_repeat_next_frame], a
	ld [button_b_repeat_next_frame], a

	ld [input_buffer_read_ptr], a
	ld [input_buffer_write_ptr], a

	; unnecessary
	; ld hl, input_buffer
	; ld bc, input_buffer_end - input_buffer
	; call memset

	ret
; init_input_mem


; check_input
;
; destroys `af`, `bc`, `de`, `hl`
check_input:
	ld a, [joypad_state_old]
	ld h, a
	ld a, [joypad_state]
	ld l, a

	or a
	ld b, a
	push hl
	call nz, on_button_held
	pop hl
	
	ld a, h
	xor l ; changed button states
	and l ; only button down states
	jp z, .skip_button_down
		ld b, a
		ld a, [frame_count]
		ld d, a

		macro SET_BUTTON_DELAY
			bit \1, b
			jr z, .no_button_delay\@
				ld a, d
				add BUTTON_REPEAT_DELAY
				ld [\2], a
			.no_button_delay\@
		endm

		SET_BUTTON_DELAY PADB_UP, 		button_up_repeat_next_frame
		SET_BUTTON_DELAY PADB_LEFT, 	button_left_repeat_next_frame
		SET_BUTTON_DELAY PADB_RIGHT, 	button_right_repeat_next_frame
		SET_BUTTON_DELAY PADB_DOWN, 	button_down_repeat_next_frame
		SET_BUTTON_DELAY PADB_SELECT, 	button_select_repeat_next_frame
		SET_BUTTON_DELAY PADB_START, 	button_start_repeat_next_frame
		SET_BUTTON_DELAY PADB_A, 		button_a_repeat_next_frame
		SET_BUTTON_DELAY PADB_B, 		button_b_repeat_next_frame

		push hl
		call on_button_down
		pop hl
	.skip_button_down
	
	ld a, l
	and h ; only button held states
	jp z, .skip_button_repeat
		ld b, 0
		ld c, a
		ld a, [frame_count]
		ld d, a

		macro SET_BUTTON_REPEAT
			bit \1, c
			jr z, .no_button_repeat\@
				ld a, [\2]
				cp d
				jr nz, .no_button_repeat\@
					set \1, b
					; ld a, d ; unnecessary
					add BUTTON_REPEAT_RATE
					ld [\2], a
			.no_button_repeat\@
		endm

		SET_BUTTON_REPEAT PADB_UP, 		button_up_repeat_next_frame
		SET_BUTTON_REPEAT PADB_LEFT, 	button_left_repeat_next_frame
		SET_BUTTON_REPEAT PADB_RIGHT, 	button_right_repeat_next_frame
		SET_BUTTON_REPEAT PADB_DOWN, 	button_down_repeat_next_frame
		SET_BUTTON_REPEAT PADB_SELECT, 	button_select_repeat_next_frame
		SET_BUTTON_REPEAT PADB_START, 	button_start_repeat_next_frame
		SET_BUTTON_REPEAT PADB_A, 		button_a_repeat_next_frame
		SET_BUTTON_REPEAT PADB_B, 		button_b_repeat_next_frame

		xor a
		cp b
		push hl
		call nz, on_button_repeat
		pop hl
	.skip_button_repeat
	
	ld a, l
	xor h ; changed button states
	and h ; only button up states
	ld b, a
	jp nz, on_button_up
	
	ret
; check_input